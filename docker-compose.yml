version: "3.8"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-appdb}",
        ]
      interval: 3s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate:v4.17.0
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    environment:
      DATABASE_URL: ${DATABASE_URL}
    entrypoint:
      [
        "sh",
        "-c",
        "migrate -path /migrations -database ${DATABASE_URL} up && echo '✅ Database up-to-date' || echo '⚠️ Migration already applied or failed'",
      ]
    restart: "no"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./tmp/settlements:/app/tmp/settlements
    depends_on:
      migrate:
        condition: service_completed_successfully

volumes:
  db_data:
